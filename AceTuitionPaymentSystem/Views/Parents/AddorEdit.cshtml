@model AceTuitionPaymentSystem.Models.tb_parent

@{
    ViewBag.Title = "Index";
    if ((string)Session["type"] == "admin")
    {
        if (Session["type"] == null)
        {
            Response.Redirect("~/Login/Index");
        }
    }
    else
    {

        Response.Redirect("~/Login/Index");
    }
}


<form name="parentsForm">
    @Html.AntiForgeryToken()

    <div class="modal-header">

        <h4 class="modal-title">

            @if (Model.parent_ic!= null)
            {
                <span><strong>Edit Parents</strong></span>
            }
            else
            {
                <span><strong>Create New Parents</strong></span>
            }

        </h4>
        <div style="text-align:right;">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    </div>
    <div class="modal-body">
        <div class="row">
            <div class="col-md-12">

                <div class="form-group">
                    <label>Parent IC</label>

                    @if (Model.parent_ic != null)
                    {
                        @Html.EditorFor(model => model.parent_ic, new { htmlAttributes = new { @class = "form-control", required = true, @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.parent_ic, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.parent_ic, new { htmlAttributes = new { @class = "form-control", required = true } })
                        @Html.ValidationMessageFor(model => model.parent_ic, "", new { @class = "text-danger" })
                    }

                </div>
                <div class="form-group">
                    <label>Parent Name</label>
                    @Html.EditorFor(model => model.parent_name, new { htmlAttributes = new { @class = "form-control", required = true } })
                    @Html.ValidationMessageFor(model => model.parent_name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Parent Address</label>
                    @Html.EditorFor(model => model.parent_address, new { htmlAttributes = new { @class = "form-control", required = true } })
                    @Html.ValidationMessageFor(model => model.parent_address, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Parent Phone</label>
                    @Html.EditorFor(model => model.parent_phone, new { htmlAttributes = new { @class = "form-control", required = true } })
                    @Html.ValidationMessageFor(model => model.parent_phone, "", new { @class = "text-danger" })
                </div>


                @if (Model.parent_ic != null)
                {
                    <div class="form-group">
                        <label>Parent Status</label>
                        <select class="form-control" id="parent_status" name="parent_status" required>

                            @if (Model.parent_status == "active")
                            {
                                <option value="active" selected>Active</option>
                                <option value="inactive">Inactive</option>
                                @Html.ValidationMessageFor(model => model.parent_status, "", new { @class = "text-danger" })
                            }
                            else if (Model.parent_status == "inactive")
                            {
                                <option value="active">Active</option>
                                <option value="inactive" selected>Inactive</option>
                                @Html.ValidationMessageFor(model => model.parent_status, "", new { @class = "text-danger" })
                            }

                        </select>
                    </div>
                }

            </div>
        </div>
    </div>
    <div class="modal-footer">

        @if (Model.parent_ic != null)
        {
            @Html.HiddenFor(model => model.parent_password)
            <button type="button" name="save" onclick="update()" class="btn btn-primary pull-right">Save</button>
        }
        else
        {
            <button type="button" name="save" onclick="create()" class="btn btn-primary pull-right">Save</button>
        }


    </div>
</form>
