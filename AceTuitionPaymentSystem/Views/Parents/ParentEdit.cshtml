@model AceTuitionPaymentSystem.Models.tb_parent

@{
    ViewBag.Title = "Index";
    if ((string)Session["type"] == "parent")
    {
        if (Session["type"] == null)
        {
            Response.Redirect("~/Login/Index");
        }
    }
    else
    {

        Response.Redirect("~/Login/Index");
    }
}


<form name="parentsEditForm">
    @Html.AntiForgeryToken()

    <div class="modal-header">

        <h4 class="modal-title">

            @if (Model.parent_ic != null)
            {
                <span><strong>Update Profile</strong></span>
            }
            else
            {
                <span><strong>Create New Parents</strong></span>
            }

        </h4>
        <div style="text-align:right;">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    </div>
    <div class="modal-body">
        <div class="row">
            <div class="col-md-12">

                <div class="form-group">
                    <label>Parent IC</label>
                    @Html.HiddenFor(model => model.parent_status)
                    @Html.HiddenFor(model => model.parent_password)

                    @if (Model.parent_ic != null)
                    {
                        @Html.EditorFor(model => model.parent_ic, new { htmlAttributes = new { @class = "form-control", required = true, @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.parent_ic, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.parent_ic, new { htmlAttributes = new { @class = "form-control", required = true } })
                        @Html.ValidationMessageFor(model => model.parent_ic, "", new { @class = "text-danger" })
                    }

                </div>

                <div class="form-group">
                    <label>Parent Name</label>
                    @Html.EditorFor(model => model.parent_name, new { htmlAttributes = new { @class = "form-control", required = true } })
                    @Html.ValidationMessageFor(model => model.parent_name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Parent Address</label>
                    @Html.EditorFor(model => model.parent_address, new { htmlAttributes = new { @class = "form-control", required = true } })
                    @Html.ValidationMessageFor(model => model.parent_address, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Parent Phone</label>
                    @Html.EditorFor(model => model.parent_phone, new { htmlAttributes = new { @class = "form-control", required = true } })
                    @Html.ValidationMessageFor(model => model.parent_phone, "", new { @class = "text-danger" })
                </div>
                <div id="new-password">
                    <div class="form-group">
                        <label>New Password</label>
                        @Html.EditorFor(model => model.parent_new_password, new { htmlAttributes = new { @class = "form-control", required = true, type = "password", ModelClientValidationMinLengthRule="3"  } })
                        @Html.ValidationMessageFor(model => model.parent_new_password, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Confirm Password</label>
                        @Html.EditorFor(model => model.parent_confirm_password, new { htmlAttributes = new { @class = "form-control", required = true, type = "password" } })
                        @Html.ValidationMessageFor(model => model.parent_confirm_password, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*@if (Model.parent_ic != null)
        {
            <div class="form-group">
                <label>Parent Status</label>
                <select class="form-control" id="parent_status" name="parent_status" required>

                    @if (Model.parent_status == "active")
                    {
                        <option value="active" selected>Active</option>
                        <option value="inactive">Inactive</option>
                        @Html.ValidationMessageFor(model => model.parent_status, "", new { @class = "text-danger" })
                    }
                    else if (Model.parent_status == "inactive")
                    {
                        <option value="active">Active</option>
                        <option value="inactive" selected>Inactive</option>
                        @Html.ValidationMessageFor(model => model.parent_status, "", new { @class = "text-danger" })
                    }

                </select>
            </div>
        }*@

            </div>
        </div>
    </div>
    <div class="modal-footer">

        <button type="button" id="change-password" style="float: left;text-align:left;"class="btn btn-danger float-left">Reset Password</button>
        @*<button type="button" onclick="myFunction()" style="float: left;" class="btn btn-info">Reset Password</button>*@

        &nbsp;&nbsp;
        @if (Model.parent_ic != null)
        {
            <button type="button" name="save" onclick="updateParent()" style="float: right;" class="btn btn-primary">Save</button>
        }
        else
        {
            <button type="button" name="save" onclick="create()" class="btn btn-primary float-right">Save</button>
        }


    </div>
</form>

<script>
    $(document).ready(function () {

        $("#new-password").hide();

        $("#change-password").on('click', function () {     

            if ($("#new-password").is(":hidden")) {
                $("#new-password").show();
            } else {
                $("#new-password").hide();
            }
            
            
        })

    });

   
        //function myFunction() {
        //    var x = document.getElementById("new-password");

        //    if (x.style.display === "none") {
        //        x.style.display = "block";
        //    } else {
        //        x.style.display = "none";
        //    }
        //}
    
</script>